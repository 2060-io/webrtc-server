name: Stable release
on:
  push:
    tags:
      - '*'
env:
  DH_USERNAME: ${{secrets.DOCKER_HUB_LOGIN}}
  DH_TOKEN: ${{secrets.DOCKER_HUB_PWD}}
  IMAGE_NAME: 'webrtc-server'
jobs:
  build-and-push:
    name: Build and push docker images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout webrtc-server
        uses: actions/checkout@v4

      - name: Setup node v22
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Enable corepack
        run: corepack enable

      - id: get_version
        uses: battila7/get-version-action@v2

      - name: Install dependencies
        run: pnpm install

      - name: Log in to Docker Hub
        if: steps.get_version.outputs.is-semver == 'true'
        run: |
          echo "$DH_TOKEN" | docker login -u "$DH_USERNAME" --password-stdin

      - name: Build Docker image
        if: steps.get_version.outputs.is-semver == 'true'
        run: |
          docker build -f Dockerfile -t $DH_USERNAME/$IMAGE_NAME:${{steps.get_version.outputs.version}} .

      - name: Add tags to Docker image and push to Docker Hub
        if: steps.get_version.outputs.is-semver == 'true'
        run: |
          docker tag $DH_USERNAME/$IMAGE_NAME:${{steps.get_version.outputs.version}} $DH_USERNAME/$IMAGE_NAME:v${{steps.get_version.outputs.major}}
          docker tag $DH_USERNAME/$IMAGE_NAME:${{steps.get_version.outputs.version}} $DH_USERNAME/$IMAGE_NAME:v${{steps.get_version.outputs.major}}.${{steps.get_version.outputs.minor}}
          docker tag $DH_USERNAME/$IMAGE_NAME:${{steps.get_version.outputs.version}} $DH_USERNAME/$IMAGE_NAME:v${{steps.get_version.outputs.major}}.${{steps.get_version.outputs.minor}}.${{steps.get_version.outputs.patch}}
          docker tag $DH_USERNAME/$IMAGE_NAME:${{steps.get_version.outputs.version}} $DH_USERNAME/$IMAGE_NAME:v${{steps.get_version.outputs.version-without-v}}
          docker push $DH_USERNAME/$IMAGE_NAME:v${{steps.get_version.outputs.major}}
          docker push $DH_USERNAME/$IMAGE_NAME:v${{steps.get_version.outputs.major}}.${{steps.get_version.outputs.minor}}
          docker push $DH_USERNAME/$IMAGE_NAME:v${{steps.get_version.outputs.major}}.${{steps.get_version.outputs.minor}}.${{steps.get_version.outputs.patch}}
          docker push $DH_USERNAME/$IMAGE_NAME:${{steps.get_version.outputs.version}}

      - name: Log in to Docker Hub Helm Registry
        if: steps.get_version.outputs.is-semver == 'true'
        run: |
          echo "$DH_TOKEN" | helm registry login -u "$DH_USERNAME" --password-stdin docker.io

      - name: Push Helm charts to Docker Hub OCI repo
        if: steps.get_version.outputs.is-semver == 'true'
        run: |
          for chart in ./charts/*; do
            if [ -d "$chart" ]; then
              chart_name=$(basename "$chart")
              sed -i "s/^version:.*/version: "${{steps.get_version.outputs.version}}"/" "$chart/Chart.yaml"
              helm dependency update "$chart"
              helm package "$chart" -d ./charts
              helm push ./charts/"$chart_name"-"${{steps.get_version.outputs.version}}".tgz oci://docker.io/$DH_USERNAME
            fi
          done
