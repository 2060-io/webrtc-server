global:
  domain: example.io # Replace with your actual domain

app:
  name: webrtc-load-balancer

statefulset:
  name: webrtc-load-balancer
  serviceName: webrtc-load-balancer-service
  replicas: 1
  containerName: webrtc-load-balancer-container
  pullPolicy: Always
  storage: 1Gi
  resources:
    webrtcLoadbalancer:
      requests:
        cpu: '50m'
        memory: '128Mi'
      limits:
        cpu: '200m'
        memory: '256Mi'
  env:
    LOG_LEVEL: '3'
    APP_PORT: '3001'
    REDIS_URL: 'redis://redis-service.{{ .Release.Namespace }}:6379'
    HEALTH_CHECK_INTERVAL: '30000'

service:
  name: 'webrtc-load-balancer'
  ports:
    http: 80
    appCheck: 3100

ingress:
  name: webrtc-load-balancer
  enabled: true
  host: webrtc.{{ .Values.global.domain }}
  tlsSecret: webrtc.{{ .Values.global.domain }}-cert

appCheckProxy:
  enabled: false
  name: app-check-proxy-container
  pullPolicy: Always
  env:
    APP_PORT: '3100'
    FIREBASE_CFG_FILE: '/config/firebase-cfg.json'
  resources:
    requests:
      cpu: '100m'
      memory: '256Mi'
    limits:
      cpu: '300m'
      memory: '512Mi'
  configMap:
    name: app-check-proxy-webrtc-load-balancer
    key: ENDPOINT_URLS
    endpointUrls: |
      [
        {
          "pattern": "/.*",
          "baseUrl": "http://{{.Values.service.name}}.{{ .Release.Namespace }}"
        },
        {
          "pattern": "/healt.*",
          "baseUrl": "http://{{.Values.service.name}}.{{ .Release.Namespace }}"
        }
      ]
